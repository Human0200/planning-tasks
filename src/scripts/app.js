import { showAIModelSettingsModal } from '../components/AIModelSettingsModal.js';
import { showCalendarSettingsModal } from '../components/CalendarSettingsModal.js'; // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç
import { Sidebar } from '../components/Sidebar.js';
import { showTaskPlanningModal } from '../components/TaskPlanningModal.js';
import { UserInfo } from '../components/UserInfo.js';
import { showUserSettingsModal } from '../components/UserSettingsModal.js';
import { loadCalendarSettings } from '../services/calendarSettings.js';
import { loadAllTasksIncrementally } from '../services/taskService.js';
import { initCalendar } from './calendar.js';
// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ app.option
function loadUserColors(callback) {
  BX24.callMethod('app.option.get', { option: 'user_colors' }, (res) => {
    if (res.error()) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', res.error());
      callback({});
    } else {
      console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ü–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', res.data());
      callback(res.data() || {}); // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –µ—Å–ª–∏ null, —Ç–æ –≤–µ—Ä–Ω—ë–º {}
    }
  });
}

// –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
  console.log('‚úÖ DOM –∑–∞–≥—Ä—É–∂–µ–Ω');

  const mainElement = document.querySelector('main');
  if (!mainElement) {
    console.error('‚ùå –û—à–∏–±–∫–∞: —ç–ª–µ–º–µ–Ω—Ç <main> –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }

  const calendarContainer = document.getElementById('calendar-container');
  if (!calendarContainer) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }

  // –°–æ–∑–¥–∞—ë–º Sidebar
  const sidebarElement = Sidebar();
  if (sidebarElement instanceof HTMLElement) {
    document.body.insertBefore(sidebarElement, mainElement);
  }

  loadUserColors((colorMap) => {
    // üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
    window.calendarSettings = {}; // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—è

    loadCalendarSettings((settings) => {
      window.calendarSettings = settings; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', window.calendarSettings);

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
      const calendar = initCalendar(window.calendarSettings, colorMap);
      window.calendar = calendar;

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ü–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∑–∞—Ç–µ–º –∑–∞–¥–∞—á–∏

      console.log('üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏...');
      console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –∑–∞–¥–∞—á...');
      loadAllTasksIncrementally(
        // onComplete: –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –∑–∞–¥–∞—á
        (allTasks, err) => {
          if (err) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞—á:', err);
            return;
          }
          console.log(`‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –í—Å–µ–≥–æ –∑–∞–¥–∞—á: ${allTasks.length}`);
          console.log('–ú–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –∑–∞–¥–∞—á:', allTasks); // –ó–¥–µ—Å—å –≤—ã–≤–æ–¥–∏–º –º–∞—Å—Å–∏–≤ –∑–∞–¥–∞—á
          filterEvents($('#user-select').val());
        },
        // onBatchLoaded: –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –∑–∞–¥–∞—á
        (batchTasks) => {
          console.log(`üì• –ü–æ–ª—É—á–µ–Ω –ø–∞–∫–µ—Ç –∑–∞–¥–∞—á: ${batchTasks.length}`);
          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—É—â–∏–π –ø–∞–∫–µ—Ç –∑–∞–¥–∞—á –≤ —Å–æ–±—ã—Ç–∏—è –¥–ª—è FullCalendar
          const events = batchTasks.map((t) => {
            const executorId = t.responsibleId;
            const color = String(colorMap[executorId] || '#cccccc');
            const isAllDay = Boolean(t.xmlId === 'ALLDAY');

            let eventStart, eventEnd;

            if (t.status === '5') {
              // –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å "5" –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∑–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
              eventStart = t.dateStart; // –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞
              eventEnd = t.closedDate; // –î–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞–¥–∞—á–∏
            } else {
              eventStart = t.startDatePlan;
              eventEnd = t.endDatePlan;
            }

            return {
              id: t.id,
              title: t.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
              start: eventStart,
              end: eventEnd,
              allDay: isAllDay,
              backgroundColor: color,
              borderColor: color,
              eventColor: color,
              textColor: '#ffffff',
              classNames: [`color-${executorId}`],
              extendedProps: {
                executor: executorId,
                responsibleName:
                  t.responsibleName || (t.responsible ? t.responsible.name : '–ù–µ —É–∫–∞–∑–∞–Ω'),
                deadline: t.deadline,
                color: color,
                comment: t.description || '',
                timeEstimate: t.timeEstimate || null,
                groupId: t.groupId,
                allDay: isAllDay,
                dateStart: t.dateStart || null, // –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞
                closedDate: t.closedDate || null, // –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –¥–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
                bitrix24Id: t.id, // <--- –î–æ–ª–∂–Ω–æ –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Ç—É—Ç!
              },
            };
          });
          // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –ø–∞–∫–µ—Ç —Å–æ–±—ã—Ç–∏–π –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
          window.calendar.addEventSource(events);
          console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π –∏–∑ –ø–∞–∫–µ—Ç–∞: ${events.length}`);
        },
        // onError: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ)
        (error) => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–¥–∞—á:', error);
        },
      );
    });
  });

  window.filterEvents = function (selectedUser) {
    if (!window.calendar) return;

    window.calendar.getEvents().forEach((event) => {
      const executorId = String(event.extendedProps.executor);
      const shouldShow = selectedUser === 'all' || executorId === selectedUser;

      event.setProp('display', shouldShow ? 'auto' : 'none');
    });

    console.log(`üîÑ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –≤—ã–±—Ä–∞–Ω: ${selectedUser}`);
  };
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –º–µ–Ω—é
  document.addEventListener('click', (e) => {
    const link = e.target.closest('[data-menu-action]');
    if (!link) return;

    const action = link.getAttribute('data-menu-action'); // ‚úÖ –¢–µ–ø–µ—Ä—å action –æ–ø—Ä–µ–¥–µ–ª—ë–Ω
    console.log(`üîç –ö–ª–∏–∫ –ø–æ –º–µ–Ω—é: ${action}`);

    if (action === '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏') {
      showUserSettingsModal(window.calendar);
    } else if (action === '–ö–∞–ª–µ–Ω–¥–∞—Ä—å') {
      showCalendarSettingsModal();
    } else if (action === '–ù–µ–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏') {
      showTaskPlanningModal();
    } else if (action === '–ú–æ–¥–µ–ª—å –ò–ò') {
      showAIModelSettingsModal();
    }
  });

  // –ü–æ–¥–∫–ª—é—á–∞–µ–º UserInfo
  console.log('‚úÖ –í—Å—Ç–∞–≤–ª—è–µ–º UserInfo –≤ #calendar-container');
  console.log('‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #calendar-container –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º UserInfo...');

  setTimeout(() => {
    const userInfoElement = UserInfo((selectedUser) => {
      console.log('üîÑ –í—ã–±—Ä–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', selectedUser);
      filterEvents(selectedUser);
    });

    if (calendarContainer && userInfoElement) {
      console.log('‚úÖ –î–æ–±–∞–≤–ª—è–µ–º UserInfo –≤ #calendar-container');
      calendarContainer.insertBefore(userInfoElement, calendarContainer.firstChild);
    } else {
      console.error(
        '‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –≤—Å—Ç–∞–≤–∏—Ç—å UserInfo ‚Äî –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω!',
      );
    }
  }, 2000); // –ó–∞–¥–µ—Ä–∂–∫–∞ 200 –º—Å –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞

  window.filterEvents = function (selectedUser) {
    if (!window.calendar) return;

    const hideNoTimeEstimate = document.getElementById('hideNoTimeEstimate')?.checked;
    const hideNoDeadline = document.getElementById('hideNoDeadline')?.checked;

    window.calendar.getEvents().forEach((event) => {
      let shouldShow = true;

      // —Ñ–∏–ª—å—Ç—Ä –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      if (selectedUser !== 'all') {
        if (String(event.extendedProps.executor) !== String(selectedUser)) {
          shouldShow = false;
        }
      }

      // –ï—Å–ª–∏ —Å—Ç–æ–∏—Ç –≥–∞–ª–æ—á–∫–∞ "—É–±—Ä–∞—Ç—å –±–µ–∑ –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"
      if (hideNoTimeEstimate) {
        if (!event.extendedProps.timeEstimate) {
          shouldShow = false;
        }
      }

      // –ï—Å–ª–∏ —Å—Ç–æ–∏—Ç –≥–∞–ª–æ—á–∫–∞ "—É–±—Ä–∞—Ç—å –±–µ–∑ –∫—Ä–∞–π–Ω–µ–≥–æ —Å—Ä–æ–∫–∞"
      if (hideNoDeadline) {
        if (!event.extendedProps.deadline) {
          shouldShow = false;
        }
      }

      // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫ —Å–æ–±—ã—Ç–∏—é
      event.setProp('display', shouldShow ? 'auto' : 'none');
    });
  };

  console.log('‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–ø—É—â–µ–Ω');
});
